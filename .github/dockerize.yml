name: Dockerize

on: 
  push:
    branches: 
      - main
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  buildAndDeploy:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # auto-generated
      DOCKER_BUILDKIT: 1
      
    steps:
    # checkout repository code
    - uses: actions/checkout@v4
      
    # docker QEMU preparation
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      
    # docker Buildx preparation
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    # docker login
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.dockerhub_username }}
        password: ${{ secrets.dockerhub_password }}
        
    # docker build & push amd64
    - name: Build and push for x64_86 processor architecture
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{secrets.dockerhub_username}}/${{secrets.dockerhub_repo_name}}:intel
        platforms: linux/amd64
        cache-from: type=registry,ref=${{secrets.dockerhub_username}}/${{secrets.dockerhub_repo_name}}:cache
        cache-to: type=inline,mode=max
        
    # docker build & push arm64
    - name: Build and push for arm64 (Apple M-series) processor architecture
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{secrets.dockerhub_username}}/${{secrets.dockerhub_repo_name}}:apple
        platforms: linux/arm64/v8
        cache-from: type=registry,ref=${{secrets.dockerhub_username}}/${{secrets.dockerhub_repo_name}}:cache
        cache-to: type=inline,mode=max

